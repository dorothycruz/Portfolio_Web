{"version":3,"file":"style.css","sources":["style.scss","../node_modules/bourbon/app/assets/stylesheets/_bourbon.scss","../node_modules/bourbon/app/assets/stylesheets/settings/_prefixer.scss","../node_modules/bourbon/app/assets/stylesheets/settings/_px-to-em.scss","../node_modules/bourbon/app/assets/stylesheets/settings/_asset-pipeline.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_assign-inputs.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_contains.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_contains-falsy.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_is-length.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_is-light.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_is-number.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_is-size.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_px-to-em.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_px-to-rem.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_shade.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_strip-units.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_tint.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_transition-property-name.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_unpack.scss","../node_modules/bourbon/app/assets/stylesheets/functions/_modular-scale.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_convert-units.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_directional-values.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_font-source-declaration.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_gradient-positions-parser.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_linear-angle-parser.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_linear-gradient-parser.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_linear-positions-parser.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_linear-side-corner-parser.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_radial-arg-parser.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_radial-positions-parser.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_radial-gradient-parser.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_render-gradients.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_shape-size-stripper.scss","../node_modules/bourbon/app/assets/stylesheets/helpers/_str-to-num.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_animation.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_appearance.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_backface-visibility.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_background.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_background-image.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_border-image.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_calc.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_columns.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_filter.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_flex-box.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_font-face.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_font-feature-settings.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_hidpi-media-query.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_hyphens.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_image-rendering.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_keyframes.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_linear-gradient.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_perspective.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_placeholder.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_radial-gradient.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_selection.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_text-decoration.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_transform.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_transition.scss","../node_modules/bourbon/app/assets/stylesheets/css3/_user-select.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_border-color.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_border-radius.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_border-style.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_border-width.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_buttons.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_clearfix.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_ellipsis.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_font-stacks.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_hide-text.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_margin.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_padding.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_position.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_prefixer.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_retina-image.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_size.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_text-inputs.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_timing-functions.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_triangle.scss","../node_modules/bourbon/app/assets/stylesheets/addons/_word-wrap.scss","../node_modules/bourbon/app/assets/stylesheets/_bourbon-deprecated-upcoming.scss","_main.scss"],"sourcesContent":["$basefont: \"source-sans-pro\", sans-serif;\n$basecolor: #4D4D4D;\n$bodytext: #7E7E7E;\n$basebg: #EFEFEF;\n\n@import \"bourbon\";\n@import \"main\";\n// @import \"portfolio\";\n\n/* --------------------------------------------------\n   index style\n-----------------------------------------------------*/\nhtml {\n    font-size: 16px;\n}\n\nbody, div, dl, dt, dd, ul, ol, li, h1, h2, h3, h4, h5, h6, pre, form, p, blockquote, th, td {\n\tmargin: 0;\n\tpadding: 0;\n\tfont-size: 1em;\n\tdirection: ltr;\n}\n\nbody {\n    margin: 0;\n    font-family: $basefont;\n    color: $basecolor;\n    font-size: 62.5%; //    1em = 10px\n}\n\n.home {\n   background: #FFDB00;\n}\n\na > p.portfolio.menu-bold {\n    font-weight: bolder;\n}\n\na {\n    text-decoration: none;\n    \n    &.logo_c {\n        color: $basecolor;\n    }\n    \n    &.logotype {\n    font-size: 2em; //20px\n    font-weight: normal;\n    color: $basecolor;\n    }\n    \n    > p.portfolio {\n    text-decoration: none;\n    color: $basecolor;\n    font-weight: normal;\n    font-size: 2em; //20px\n    }\n        \n    .social &:hover {\n    border-bottom: 3px solid #fff;\n    color: #fff;\n    color: $basecolor;\n    }  \n}\n\n\n/*nav bar*/\n\nnav {\n    margin: 0;\n\t@include display(flex);\n\t@include justify-content(center);\n    \n    ul.navbar  {\n    list-style-type: none;\n    @include display(flex);\n    @include flex-flow(row wrap);\n    width: 95%;\n        \n    }\n    \n    li {\n    @include display(flex);\n\t@include align-items(center);\n    margin-right: 3%;\n        \n        &.space {\n            margin-right: 10%;\n        }\n    \n    }\n    \n}\n\n.logo {\n    margin-right: auto;\n}\n\na.logo_c {\n    font-size: 8em;\n    font-weight: bold;\n}\n\n.logotype {\n    margin-left: 7%;\n    width: 125px;\n}\n\n\n/*index subcontent*/\n\n.intro2 {\n    @include display(flex);\n    @include flex-flow(column);\n    @include align-items(center);\n    margin-top: 13em;\n}\n\n.resume_downa {\n    margin-top: 9em;\n}\n\n.resume_downt {\n    margin-top: 2em;\n}\n\nh1 {\n    font-size: 8em;\n    font-weight: bold;\n}\n\nh2 {\n    font-size: 6em; //72px\n    font-weight: normal;\n    margin-bottom: 0.1em;\n}\n\nh6 {\n    font-family: $basefont;\n    font-size: 2em; //20px\n    font-weight: lighter;\n}\n\n\n.change {\n    font-size: 3em; //40px\n    font-weight: lighter;\n} \n\n#down {\n  @include animation(bounce2 2s infinite);\n}\n\n@include keyframes(bounce2) {\n  0%, 20%, 50%, 80%, 100% {\n    @include transform(translateY(0));\n  }\n  40% {\n    @include transform(translateY(-2em));\n  }\n  60% {\n    @include transform(translateY(-1.5em));\n  }\n}\n\n/*profile content*/\n\n#resume {\n    background: #D6D6D6;\n    width: 100%;\n    height: 700px;\n    @include display(flex);\n\t@include justify-content(center);\n}\n\nsection.profile {\n    @include display(flex);\n    width: 90%;\n}\n\nh3.ptitle {\n    font-size: 4.5em; //50px\n    margin-bottom: 0.6em;\n}\n\np.pdescription {\n    font-size: 2em; //25px\n    font-weight: normal;\n    color: $bodytext;\n}\n\narticle {\n    @include align-self(center);\n    \n    &.description {\n        @include flex(1);\n    }\n    \n    &.links {\n        @include flex(1);\n        @include display(flex);\n        @include flex-flow(column);\n        align-items: center;\n        }\n}\n\n//#cv {\n//    width: 100px;\n//    height: auto;\n//}\n\n.margincv {\n    margin-bottom: 2em;\n}\n\nhgroup {\n    @include align-items(center);\n    @include display(flex);\n    @include flex-flow(column);\n    text-align: center;\n}\n\n/*footer*/\n\nfooter {\n\t@include display(flex);\n\t@include justify-content(center);\n\t@include align-items(center);\n    background-color: $basebg;\n    text-align: center;\n    height: 60px;\n    font-size: 1.5em;\n}\n\n/* --------------------------------------------------\n   portfolio style\n-----------------------------------------------------*/\n\n.portfolio2 {\n    background-color: $basebg;\n}\n\ndiv.grid {\n    @include display(flex);\n    @include justify-content(space-around);\n}\n\nsection.cover {\n    @include display(flex);\n    @include flex-flow(wrap);\n    @include justify-content(center);\n    margin-top: 2em;  \n    margin-left: 1.5em;\n    width: 90%;\n}\n\nsection.cover > div {\n    max-height: 500px;\n    min-height: 500px;\n    max-width: 35em;\n    min-width: 35em;\n    margin-bottom: 1.5em;\n    margin-right: 1.5em;\n    overflow: hidden;\n}\n\narticle {\n    &.cover_t {\n    margin: 2em 2em 2em 2em;\n    }\n    \n    &.tags {\n        @include display(flex);\n        \n        >p {\n           margin-right: 1.5em;\n            color: #fff;\n            font-size: 1.8em;\n        }\n    }\n}\n\np.period {\n    font-size: 4em;\n    margin-top: -0.5em;\n    color: #fff;\n    letter-spacing: 0.08em;    \n}\n\nh4 {\n    color: #fff;\n    font-size: 2.6em;\n    letter-spacing: 0.04em;\n    font-weight: bold;\n}\n\ndiv.grid-hover:hover{\n    opacity: 0.7;\n}\n\n#image-paila {\n    margin-left: 53px;\n    \n}\n\nh4.black, article.tags.black > p {\n    color: $basecolor;\n}\n\n#image-paypal {\n    margin-left: 18px;\n    width: 90%;\n    height: 90%;\n    margin-top: 50px;\n}\n\n#image-zum {\n    margin-left: 35px;\n    width: 80%;\n    height: 80%;\n}\n\n#image-quater {\n    margin-left: 18px;\n    width: 90%;\n    height: 90%;\n    margin-top: 50px;\n}\n\n#image-ocd {\n    margin-left: -130px;\n    width: 140%;\n    height: 90%;\n    margin-top: 50px;\n}\n\n#image-history {\n    width: 80%;\n    height: 80%;\n    margin-top: -30px;\n    margin-left: 30px;\n}\n\n#image-blender {\n    width: 90%;\n    height: 90%;\n    margin-left: 20px;\n}\n\n#image-buble {\n    width: 85%;\n    height: 85%;\n    margin-left: 20px; \n    margin-top: 15px;\n}\n\n#image-addams {\n    width: 60%;\n    height: 60%;\n    margin-top: -160px;\n    margin-left: 150px;\n}\n\n#image-releve {\n    width: 80%;\n    height: 80%;\n    margin-left: 33px;\n    margin-top: 7px;\n}\n\n#image-posters {\n    width: 85%;\n    height: 85%;\n    margin-left: 26px;\n}\n\n.pailasq {\n    background-color: #FA6D20;\n}\n\n.paypalsq {\n    background-color: #01A6E5;\n}\n\n.zumsq {\n    background-color: #EE3931;\n}\n\n\n.bublesq {\n    background-color: #C61E4B;\n}\n\n.addamsq {\n    background-color: #191818;\n}\n\n.postersq {\n    background-color: #414042;\n}\n\n.blendersq {\n    background-color: #DD3745;\n}\n\n.javasq {\n    background-color: #38E6A6;\n}\n\n.java2sq {\n    background-color: #CEEFFF;\n}\n\n.relevesq {\n    background-color: #DBB27B;\n}\n\n.infosq {\n    background-color: #FAFBFA;\n}\n\n/* --------------------------------------------------\n   releve styles\n-----------------------------------------------------*/\n\n.releve-dark-bg {\n    background-color: #231F20;\n}\n\n/* --------------------------------------------------\n   zumzum styles\n-----------------------------------------------------*/\n\nimg.team-photos {\n    width: 70%;\n    height: auto;\n    margin-top: 20px;\n    margin-left: 13px;  //    center image without using margin\n}\n\np.name, p.position {\n    color: #fff;\n    font-size: 1.3em;\n    text-align: center\n}\n\n.team {\n    @include display(flex);\n}\n\n.zum-icons, .zum-process {\n    @include display(flex);\n    @include flex-flow(wrap);\n    @include justify-content(center);\n}\n\n.zum-icons {\n    width: 70%;\n}\n\n.zum-process {\n    width: 85%;\n}\n\n.zum-website {\n    width: 85%;\n    @include display(flex);\n    @include flex-flow(wrap);\n}\n\n.zum-menu {\n    margin-right: 3em;\n    margin-bottom: 3em;\n}\n\n.zum-flow {\n    width: 100%;\n    height: 100%;\n}\n\n\ndiv.zum-align {\n    @include display(flex);\n    @include justify-content(center);\n}\n\n.zum-column{\n    @include flex-direction(column);\n}\n\n.zum-logo {\n    margin: 4em 0 4em 0;\n}\n\nimg.zum-shadow {\n    width: 100%;\n    height: 100%;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0), 0 6px 20px 0;\n    margin: 0 0 7em 0;\n}\n\n#zum-web {\n    width: 50%;\n    height: 50%\n}\n\n\n/* --------------------------------------------------\n   buble styles\n-----------------------------------------------------*/\n\n.buble-content {\n    @include display(flex);\n    @include align-items(center);\n    background-color: #C61E4B;\n    @include flex-flow(column);\n}\n\n#buble-img {\n    width: 90%;\n    height: auto;\n    margin-bottom: 6em;\n    margin-top: 2em;\n}\n\n#buble-video {\n    margin-bottom: 5em;\n    margin-top: -4em;\n}\n\n/* --------------------------------------------------\n   posters styles\n-----------------------------------------------------*/\n\n.posters-flex {\n    @include display(flex);\n    @include justify-content(center);\n    margin-bottom: 3em;\n}\n\n.posters-shadow {\n    width: 50%;\n    height: 40%;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0), 0 6px 20px 0;\n    margin: 0 0 3em 0;\n}\n\n.poster-text {\n    color: $basecolor;\n    font-size: 2em;\n    padding: 3em 0 3em 0;\n}\n\n.posters-names {\n    background-color: #D8D8D8;\n}\n\n/* --------------------------------------------------\n   history of design styles\n-----------------------------------------------------*/\n\n.info-imgage {\n    width: 20%;\n    height: 100%;\n}\n\n#info-img {\n    width: 65%;\n    height: 65%;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0), 0 6px 20px 0;\n    margin: 4em 0 4em 0;\n}\n\n.history-content {\n    background-color: #FAFBFA;\n    @include display(flex);\n    @include flex-flow(column);\n}\n\n.history-center, div.link-history, .info-video {\n    @include display(flex);\n    @include justify-content(center);\n}\n\n.video-history-center {\n    @include display(flex);\n    @include flex-flow(column);\n    margin-top: 4em;\n    font-size: 2em; //20px\n    font-weight: normal;\n    color: $basecolor;\n    \n    > p {\n        text-align: center;\n        \n        > a {\n           color: $basecolor; \n        }\n\n    }\n}\n\na#info-video, p.p-center {\n    text-align: center\n}\n\n/* --------------------------------------------------\n   javaS-1 styles\n-----------------------------------------------------*/\n\n#javas-html {\n    width: 80%;\n    min-height: 600px;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0), 0 6px 20px 0;  \n    margin: 2em 0 9em 0;\n    @include display(flex);\n    @include justify-content(center);\n    cursor: pointer;\n}\n\n.java-grid {\n    @include display(flex);\n    @include justify-content(center);\n    \n}\n\n.javas-content {\n    align-self: center;\n    font-size: 2em;\n    cursor: pointer;\n}\n\n/* --------------------------------------------------\n   javaS-2 styles\n-----------------------------------------------------*/\n\n#javas2-html {\n    width: 80%;\n    min-height: 600px;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0), 0 6px 20px 0;  \n    margin: 2em 0 9em 0;\n    @include display(flex);\n    @include justify-content(center);\n    cursor: pointer;\n    background-color: #000;\n}\n\n.java2-grid {\n    @include display(flex);\n    @include flex-flow(column);\n    @include align-items(center);\n    \n}\n\n.javas2-content {\n    align-self: center;\n    font-size: 2em;\n    cursor: pointer;\n}\n\n/* --------------------------------------------------\n   blender styles\n-----------------------------------------------------*/\n\n.blender-text {\n    font-size: 2em;\n    color: #fff;\n}\n\n.blender-width2 {\n    width:  80%;\n}\n\n.blender-grid {\n    @include display(flex);\n    @include align-items(center);\n    @include flex-flow(wrap);\n}\n\n.graysq {\n    background-color: #D8D8D8;\n    color: $bodytext;\n    font-size: 2em;\n    text-align: center;\n    padding: 3em 0 3em 0;\n}\n\n.blender-div {\n    flex: 1;\n}\n\n/* --------------------------------------------------\n   addams styles\n-----------------------------------------------------*/\n\n#addams-svg {\n    height: 100%;\n    width: 20%;\n    margin-right: -81px;\n}\n\n.arrows-each {\n    top: 87%;\n    position: absolute;\n}\n\n.addams-grid {\n    @include display(flex);\n    @include justify-content(center);\n}\n\n.addams-content {\n    background: url(../img/addams/Spider-Web-7.png) no-repeat center center;\n    background-size: cover;\n}\n\n#addams-img {\n    width: 80%;\n    height: 80%;\n    box-shadow: 0 0px 58px 30px rgba(0, 0, 0, 1);\n    margin: 6rem 0 6rem 0;\n}\n\n.characters {\n    @include display(flex);\n    @include flex-flow(wrap);\n    @include justify-content(center);\n    padding: 6rem 0 6rem 0;\n    \n    > div {\n        margin-right: 2em;\n        margin-bottom: 3rem;\n    }\n}\n\n\n/* --------------------------------------------------\n   paila styles\n-----------------------------------------------------*/\n\nsection.introp {\n    @include display(flex);\n    @include flex-flow(column);\n    @include justify-content(center);\n    margin-top: 4em;\n    \n    \n    > article {\n        @include display(flex);\n        @include flex-flow(row);\n        width: 87%;\n    }\n}\n\nli.logo.white > a{\n    color: #fff;\n}\n    \n.paragraph {\n    color: #fff;\n    font-size: 2.2em;\n    line-height: 1.6em;\n    font-weight: normal;\n}\n\n.paragraph2 {\n    font-size: 2.2em;\n    line-height: 1.6em;\n    font-weight: normal;\n}\n\n.p-img-space {\n    margin-right: 10em;\n    \n}\n\n.pailaimg {\n    height: 100%;\n    width: 315px;\n}\n\narticle.tags2 {\n    @include display(flex);\n\n    >p {\n       margin-right: 1.5em;\n        color: #fff;\n        font-size: 2.5em;\n        font-weight: normal;\n    }\n}\n\narticle.tags3 {\n    @include display(flex);\n\n    >p {\n       margin-right: 1.5em;\n        font-size: 2.5em;\n        font-weight: normal;\n    }\n}\n\np.period2 {\n    font-size: 10em;\n    margin-top: -0.5em;\n    color: #fff;\n    letter-spacing: 0.08em;    \n}\n\np.period3 {\n    font-size: 10em;\n    margin-top: -0.5em;\n    letter-spacing: 0.08em;    \n}\n\na.center_downa {\n    @include align-self(center);\n}\n\nh1.titles {\n    font-size: 4em;\n    color: #fff;   \n}\n\nh1.titles2 {\n    font-size: 4em;  \n}\n\n/* --------------------------------------------------\n   paypal styles\n-----------------------------------------------------*/\n\n.paypalimg {\n    height: 100%;\n    width: 420px;\n    \n}\n\n/* --------------------------------------------------\n   ocd styles\n-----------------------------------------------------*/\n\n.black > h1{\n    color: $basecolor;   \n}\n\n.black > p{\n    color: $basecolor;   \n}\n\np.black {\n    color: $basecolor;\n}\n\n\n\n/* --------------------------------------------------\n   cellphone screen styles\n-----------------------------------------------------*/\n\n@media only screen \n  and (min-width: 320px) \n  and (max-width: 480px) {\n      \n      body {\n          font-size: 60%; //    1em = 10px\n          @include display(flex);\n          @include flex-flow(column);\n        \n      }\n      \n      h1 {\n          font-size: 7em;\n      }\n      \n      h2 {\n          font-size: 3.2em;\n      }\n      \n      h3.ptitle {\n          font-size: 3em;\n      }\n      \n      section.profile {\n          display: block;\n          margin-top: 4em;\n      }\n      \n      article.links {\n          @include display(flex);\n          @include flex-flow(row); \n          @include justify-content(space-around);\n          @include align-items(center);\n          margin-top: 4em;\n      }\n      \n      .intro2 {\n        @include display(flex);\n        @include flex-flow(column);\n        @include align-items(center);\n        margin-top: 15em;\n        }\n\n        .resume_downa {\n        margin-top: 10em;\n        }\n\n        .resume_downt {\n        margin-top: 2em;\n        }\n//      \n//        nav ul.navbar {\n//          display: none;\n//      }\n//      \n//        a > p.portfolio {\n//        text-decoration: none;\n//        color: #4D4D4D;\n//        font-weight: normal;\n//        font-size: 2em;\n//        margin-right: 7px;\n//    }\n\n}\n//    \n///* --------------------------------------------------\n//   tablet screen styles\n//-----------------------------------------------------*/\n//\n//@media only screen\n//    and (min-width: 480px)\n//    and (max-width: 768px) {\n//      body {\n//          font-size: 60%; //    1em = 10px\n//          @include display(flex);\n//          @include flex-flow(column);\n//        \n//      }\n//        \n//        h2 {\n//          font-size: 6em;\n//      }\n//        \n//        .intro2 {\n//    @include display(flex);\n//    @include flex-flow(column);\n//    @include align-items(center);\n//    margin-top: 24em;\n//        \n//            \n//            #resume {\n//                height: 1024px;\n//            }\n//        \n//      .resume_downa {\n//        margin-top: 25em;\n//        }\n//\n//        .resume_downt {\n//        margin-top: 2em;\n//        }\n//        \n//        h3.ptitle {\n//          font-size: 4.5em;\n//      }\n//\n//}\n//    ","// Bourbon 4.2.7\n// http://bourbon.io\n// Copyright 2011-2015 thoughtbot, inc.\n// MIT License\n\n@import \"settings/prefixer\";\n@import \"settings/px-to-em\";\n@import \"settings/asset-pipeline\";\n\n@import \"functions/assign-inputs\";\n@import \"functions/contains\";\n@import \"functions/contains-falsy\";\n@import \"functions/is-length\";\n@import \"functions/is-light\";\n@import \"functions/is-number\";\n@import \"functions/is-size\";\n@import \"functions/px-to-em\";\n@import \"functions/px-to-rem\";\n@import \"functions/shade\";\n@import \"functions/strip-units\";\n@import \"functions/tint\";\n@import \"functions/transition-property-name\";\n@import \"functions/unpack\";\n@import \"functions/modular-scale\";\n\n@import \"helpers/convert-units\";\n@import \"helpers/directional-values\";\n@import \"helpers/font-source-declaration\";\n@import \"helpers/gradient-positions-parser\";\n@import \"helpers/linear-angle-parser\";\n@import \"helpers/linear-gradient-parser\";\n@import \"helpers/linear-positions-parser\";\n@import \"helpers/linear-side-corner-parser\";\n@import \"helpers/radial-arg-parser\";\n@import \"helpers/radial-positions-parser\";\n@import \"helpers/radial-gradient-parser\";\n@import \"helpers/render-gradients\";\n@import \"helpers/shape-size-stripper\";\n@import \"helpers/str-to-num\";\n\n@import \"css3/animation\";\n@import \"css3/appearance\";\n@import \"css3/backface-visibility\";\n@import \"css3/background\";\n@import \"css3/background-image\";\n@import \"css3/border-image\";\n@import \"css3/calc\";\n@import \"css3/columns\";\n@import \"css3/filter\";\n@import \"css3/flex-box\";\n@import \"css3/font-face\";\n@import \"css3/font-feature-settings\";\n@import \"css3/hidpi-media-query\";\n@import \"css3/hyphens\";\n@import \"css3/image-rendering\";\n@import \"css3/keyframes\";\n@import \"css3/linear-gradient\";\n@import \"css3/perspective\";\n@import \"css3/placeholder\";\n@import \"css3/radial-gradient\";\n@import \"css3/selection\";\n@import \"css3/text-decoration\";\n@import \"css3/transform\";\n@import \"css3/transition\";\n@import \"css3/user-select\";\n\n@import \"addons/border-color\";\n@import \"addons/border-radius\";\n@import \"addons/border-style\";\n@import \"addons/border-width\";\n@import \"addons/buttons\";\n@import \"addons/clearfix\";\n@import \"addons/ellipsis\";\n@import \"addons/font-stacks\";\n@import \"addons/hide-text\";\n@import \"addons/margin\";\n@import \"addons/padding\";\n@import \"addons/position\";\n@import \"addons/prefixer\";\n@import \"addons/retina-image\";\n@import \"addons/size\";\n@import \"addons/text-inputs\";\n@import \"addons/timing-functions\";\n@import \"addons/triangle\";\n@import \"addons/word-wrap\";\n\n@import \"bourbon-deprecated-upcoming\";\n","@charset \"UTF-8\";\n\n/// Global variables to enable or disable vendor prefixes\n\n$prefix-for-webkit:    true !default;\n$prefix-for-mozilla:   true !default;\n$prefix-for-microsoft: true !default;\n$prefix-for-opera:     true !default;\n$prefix-for-spec:      true !default;\n","$em-base: 16px !default;\n","@charset \"UTF-8\";\n\n/// A global setting to enable or disable the `$asset-pipeline` variable for all functions that accept it.\n///\n/// @type Bool\n\n$asset-pipeline: false !default;\n","@function assign-inputs($inputs, $pseudo: null) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list contains a value(s).\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @param {List} $values\n///   A single value or list of values to check for.\n///\n/// @example scss - Usage\n///   contains($list, $value)\n///\n/// @return {Bool}\n\n@function contains($list, $values...) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list does not contains a value.\n///\n/// @access private\n///\n/// @param {List} $list\n///   The list to check against.\n///\n/// @return {Bool}\n\n@function contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS length.\n///\n/// @param {String} $value\n\n@function is-length($value) {\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\n       or index(auto inherit initial 0, $value)\n       or (type-of($value) == \"number\" and not(unitless($value))));\n}\n","@charset \"UTF-8\";\n\n/// Programatically determines whether a color is light or dark.\n///\n/// @link http://robots.thoughtbot.com/closer-look-color-lightness\n///\n/// @param {Color (Hex)} $color\n///\n/// @example scss - Usage\n///   is-light($color)\n///\n/// @return {Bool}\n\n@function is-light($hex-color) {\n  $-local-red: red(rgba($hex-color, 1));\n  $-local-green: green(rgba($hex-color, 1));\n  $-local-blue: blue(rgba($hex-color, 1));\n  $-local-lightness: ($-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722) / 255;\n\n  @return $-local-lightness > 0.6;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid number.\n///\n/// @param {Number} $value\n///\n/// @require {function} contains\n\n@function is-number($value) {\n  @return contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS size.\n///\n/// @param {String} $value\n///\n/// @require {function} contains\n/// @require {function} is-length\n\n@function is-size($value) {\n  @return is-length($value)\n          or contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n","// Convert pixels to ems\n// eg. for a relational value of 12px write em(12) when the parent is 16px\n// if the parent is another value say 24px write em(12, 24)\n\n@function em($pxval, $base: $em-base) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1em;\n}\n","// Convert pixels to rems\n// eg. for a relational value of 12px write rem(12)\n// Assumes $em-base is the font-size of <html>\n\n@function rem($pxval) {\n  @if not unitless($pxval) {\n    $pxval: strip-units($pxval);\n  }\n\n  $base: $em-base;\n  @if not unitless($base) {\n    $base: strip-units($base);\n  }\n  @return ($pxval / $base) * 1rem;\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n///\n/// @return {Color}\n\n@function shade($color, $percent) {\n  @return mix(#000, $color, $percent);\n}\n","@charset \"UTF-8\";\n\n/// Strips the unit from a number.\n///\n/// @param {Number (With Unit)} $value\n///\n/// @example scss - Usage\n///   $dimension: strip-units(10em);\n///\n/// @example css - CSS Output\n///   $dimension: 10;\n///\n/// @return {Number (Unitless)}\n\n@function strip-units($value) {\n  @return ($value / ($value * 0 + 1));\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @param {Color} $color\n///\n/// @param {Number (Percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @example scss - Usage\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n///\n/// @return {Color}\n\n@function tint($color, $percent) {\n  @return mix(#fff, $color, $percent);\n}\n","// Return vendor-prefixed property names if appropriate\n// Example: transition-property-names((transform, color, background), moz) -> -moz-transform, color, background\n//************************************************************************//\n@function transition-property-names($props, $vendor: false) {\n  $new-props: ();\n\n  @each $prop in $props {\n    $new-props: append($new-props, transition-property-name($prop, $vendor), comma);\n  }\n\n  @return $new-props;\n}\n\n@function transition-property-name($prop, $vendor: false) {\n  // put other properties that need to be prefixed here aswell\n  @if $vendor and $prop == transform {\n    @return unquote('-'+$vendor+'-'+$prop);\n  }\n  @else {\n    @return $prop;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Converts shorthand to the 4-value syntax.\n///\n/// @param {List} $shorthand\n///\n/// @example scss - Usage\n///   .element {\n///     margin: unpack(1em 2em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin: 1em 2em 1em 2em;\n///   }\n\n@function unpack($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  } @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  } @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  } @else {\n    @return $shorthand;\n  }\n}\n","// Scaling Variables\n$golden:           1.618;\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n\n$modular-scale-ratio: $perfect-fourth !default;\n$modular-scale-base: em($em-base) !default;\n\n@function modular-scale($increment, $value: $modular-scale-base, $ratio: $modular-scale-ratio) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n","//************************************************************************//\n// Helper function for str-to-num fn.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _convert-units($number, $unit) {\n  $strings: \"px\", \"cm\", \"mm\", \"%\", \"ch\", \"pica\", \"in\", \"em\", \"rem\", \"pt\", \"pc\", \"ex\", \"vw\", \"vh\", \"vmin\", \"vmax\", \"deg\", \"rad\", \"grad\", \"turn\";\n  $units:   1px, 1cm, 1mm, 1%, 1ch, 1pica, 1in, 1em, 1rem, 1pt, 1pc, 1ex, 1vw, 1vh, 1vmin, 1vmax, 1deg, 1rad, 1grad, 1turn;\n  $index: index($strings, $unit);\n\n  @if not $index {\n    @warn \"Unknown unit `#{$unit}`.\";\n    @return false;\n  }\n\n  @if type-of($number) != \"number\" {\n    @warn \"`#{$number} is not a number`\";\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n","@charset \"UTF-8\";\n\n/// Directional-property mixins are shorthands for writing properties like the following\n///\n/// @ignore You can also use `false` instead of `null`.\n///\n/// @param {List} $vals\n///   List of directional values\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dotted null);\n///     @include margin(null 0 10px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: dotted;\n///     border-top-style: dotted;\n///     margin-bottom: 10px;\n///     margin-left: 0;\n///     margin-right: 0;\n///   }\n///\n/// @require {function} contains-falsy\n///\n/// @return {List}\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $a: nth($vals, 1);\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\n  @else if $b == $d                      { $output: $a $b $c;    }\n  @else                                  { $output: $a $b $c $d; }\n\n  @return $output;\n}\n\n/// Output directional properties, for instance `margin`.\n///\n/// @access private\n///\n/// @param {String} $pre\n///   Prefix to use\n/// @param {String} $suf\n///   Suffix to use\n/// @param {List} $vals\n///   List of values\n///\n/// @require {function} collapse-directionals\n/// @require {function} contains-falsy\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n  } @else {\n    #{$all}: $vals;\n  }\n}\n","// Used for creating the source string for fonts using @font-face\n// Reference: http://goo.gl/Ru1bKP\n\n@function font-url-prefixer($asset-pipeline) {\n  @if $asset-pipeline == true {\n    @return font-url;\n  } @else {\n    @return url;\n  }\n}\n\n@function font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats,\n  $font-url) {\n\n  $src: ();\n\n  $formats-map: (\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\")\n  );\n\n  @each $key, $values in $formats-map {\n    @if contains($file-formats, $key) {\n      $file-path: nth($values, 1);\n      $font-format: nth($values, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    }\n  }\n\n  @return $src;\n}\n","@function _gradient-positions-parser($gradient-type, $gradient-positions) {\n  @if $gradient-positions\n  and ($gradient-type == linear)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _linear-positions-parser($gradient-positions);\n  }\n  @else if $gradient-positions\n  and ($gradient-type == radial)\n  and (type-of($gradient-positions) != color) {\n    $gradient-positions: _radial-positions-parser($gradient-positions);\n  }\n  @return $gradient-positions;\n}\n","// Private function for linear-gradient-parser\n@function _linear-angle-parser($image, $first-val, $prefix, $suffix) {\n  $offset: null;\n  $unit-short:  str-slice($first-val, str-length($first-val) - 2, str-length($first-val));\n  $unit-long:   str-slice($first-val, str-length($first-val) - 3, str-length($first-val));\n\n  @if ($unit-long == \"grad\") or\n      ($unit-long == \"turn\") {\n    $offset: if($unit-long == \"grad\", -100grad * 3, -0.75turn);\n  }\n\n  @else if ($unit-short == \"deg\") or\n           ($unit-short == \"rad\") {\n    $offset: if($unit-short == \"deg\", -90 * 3, 1.6rad);\n  }\n\n  @if $offset {\n    $num: _str-to-num($first-val);\n\n    @return (\n      webkit-image: -webkit- + $prefix + ($offset - $num) + $suffix,\n      spec-image: $image\n    );\n  }\n}\n","@function _linear-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $has-multiple-vals: str-index($first-val, \" \");\n  $has-single-position: unquote(_position-flipper($first-val) + \"\");\n  $has-angle: is-number(str-slice($first-val, 1, 1));\n\n  @if $has-multiple-vals {\n    $gradients: _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals);\n  }\n\n  @else if $has-single-position != \"\" {\n    $pos: unquote($has-single-position + \"\");\n\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n\n  @else if $has-angle {\n    // Rotate degree for webkit\n    $gradients: _linear-angle-parser($image, $first-val, $prefix, $suffix);\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","@function _linear-positions-parser($pos) {\n  $type: type-of(nth($pos, 1));\n  $spec: null;\n  $degree: null;\n  $side: null;\n  $corner: null;\n  $length: length($pos);\n  // Parse Side and corner positions\n  @if ($length > 1) {\n    @if nth($pos, 1) == \"to\" { // Newer syntax\n      $side: nth($pos, 2);\n\n      @if $length == 2 { // eg. to top\n        // Swap for backwards compatibility\n        $degree: _position-flipper(nth($pos, 2));\n      }\n      @else if $length == 3 { // eg. to top left\n        $corner: nth($pos, 3);\n      }\n    }\n    @else if $length == 2 { // Older syntax (\"top left\")\n      $side: _position-flipper(nth($pos, 1));\n      $corner: _position-flipper(nth($pos, 2));\n    }\n\n    @if (\"#{$side} #{$corner}\" == \"left top\") or (\"#{$side} #{$corner}\" == \"top left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right top\") or (\"#{$side} #{$corner}\" == \"top right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"right bottom\") or (\"#{$side} #{$corner}\" == \"bottom right\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    @else if (\"#{$side} #{$corner}\" == \"left bottom\") or (\"#{$side} #{$corner}\" == \"bottom left\") {\n      $degree: _position-flipper(#{$side}) _position-flipper(#{$corner});\n    }\n    $spec: to $side $corner;\n  }\n  @else if $length == 1 {\n    // Swap for backwards compatibility\n    @if $type == string {\n      $degree: $pos;\n      $spec: to _position-flipper($pos);\n    }\n    @else {\n      $degree: -270 - $pos; //rotate the gradient opposite from spec\n      $spec: $pos;\n    }\n  }\n  $degree: unquote($degree + \",\");\n  $spec:   unquote($spec + \",\");\n  @return $degree $spec;\n}\n\n@function _position-flipper($pos) {\n  @return if($pos == left, right, null)\n         if($pos == right, left, null)\n         if($pos == top, bottom, null)\n         if($pos == bottom, top, null);\n}\n","// Private function for linear-gradient-parser\n@function _linear-side-corner-parser($image, $first-val, $prefix, $suffix, $has-multiple-vals) {\n  $val-1: str-slice($first-val, 1, $has-multiple-vals - 1);\n  $val-2: str-slice($first-val, $has-multiple-vals + 1, str-length($first-val));\n  $val-3: null;\n  $has-val-3: str-index($val-2, \" \");\n\n  @if $has-val-3 {\n    $val-3: str-slice($val-2, $has-val-3 + 1, str-length($val-2));\n    $val-2: str-slice($val-2, 1, $has-val-3 - 1);\n  }\n\n  $pos: _position-flipper($val-1) _position-flipper($val-2) _position-flipper($val-3);\n  $pos: unquote($pos + \"\");\n\n  // Use old spec for webkit\n  @if $val-1 == \"to\" {\n    @return (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  // Bring the code up to spec\n  @else {\n    @return (\n      webkit-image: -webkit- + $image,\n      spec-image: $prefix + \"to \" + $pos + $suffix\n    );\n  }\n}\n","@function _radial-arg-parser($g1, $g2, $pos, $shape-size) {\n  @each $value in $g1, $g2 {\n    $first-val: nth($value, 1);\n    $pos-type:  type-of($first-val);\n    $spec-at-index: null;\n\n    // Determine if spec was passed to mixin\n    @if type-of($value) == list {\n      $spec-at-index: if(index($value, at), index($value, at), false);\n    }\n    @if $spec-at-index {\n      @if $spec-at-index > 1 {\n        @for $i from 1 through ($spec-at-index - 1) {\n          $shape-size: $shape-size nth($value, $i);\n        }\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      @else if $spec-at-index == 1 {\n        @for $i from ($spec-at-index + 1) through length($value) {\n          $pos: $pos nth($value, $i);\n        }\n      }\n      $g1: null;\n    }\n\n    // If not spec calculate correct values\n    @else {\n      @if ($pos-type != color) or ($first-val != \"transparent\") {\n        @if ($pos-type == number)\n        or ($first-val == \"center\")\n        or ($first-val == \"top\")\n        or ($first-val == \"right\")\n        or ($first-val == \"bottom\")\n        or ($first-val == \"left\") {\n\n          $pos: $value;\n\n          @if $pos == $g1 {\n            $g1: null;\n          }\n        }\n\n        @else if\n           ($first-val == \"ellipse\")\n        or ($first-val == \"circle\")\n        or ($first-val == \"closest-side\")\n        or ($first-val == \"closest-corner\")\n        or ($first-val == \"farthest-side\")\n        or ($first-val == \"farthest-corner\")\n        or ($first-val == \"contain\")\n        or ($first-val == \"cover\") {\n\n          $shape-size: $value;\n\n          @if $value == $g1 {\n            $g1: null;\n          }\n\n          @else if $value == $g2 {\n            $g2: null;\n          }\n        }\n      }\n    }\n  }\n  @return $g1, $g2, $pos, $shape-size;\n}\n","@function _radial-positions-parser($gradient-pos) {\n  $shape-size: nth($gradient-pos, 1);\n  $pos:        nth($gradient-pos, 2);\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  $pre-spec: unquote(if($pos, \"#{$pos}, \", null))\n             unquote(if($shape-size, \"#{$shape-size},\", null));\n  $pos-spec: if($pos, \"at #{$pos}\", null);\n\n  $spec: \"#{$shape-size-spec} #{$pos-spec}\";\n\n  // Add comma\n  @if ($spec != \"  \") {\n    $spec: \"#{$spec},\";\n  }\n\n  @return $pre-spec $spec;\n}\n","@function _radial-gradient-parser($image) {\n  $image: unquote($image);\n  $gradients: ();\n  $start: str-index($image, \"(\");\n  $end: str-index($image, \",\");\n  $first-val: str-slice($image, $start + 1, $end - 1);\n\n  $prefix: str-slice($image, 1, $start);\n  $suffix: str-slice($image, $end, str-length($image));\n\n  $is-spec-syntax: str-index($first-val, \"at\");\n\n  @if $is-spec-syntax and $is-spec-syntax > 1 {\n    $keyword: str-slice($first-val, 1, $is-spec-syntax - 2);\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n    $pos: append($pos, $keyword, comma);\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if $is-spec-syntax == 1 {\n    $pos: str-slice($first-val, $is-spec-syntax + 3, str-length($first-val));\n\n    $gradients: (\n      webkit-image: -webkit- + $prefix + $pos + $suffix,\n      spec-image: $image\n    );\n  }\n\n  @else if str-index($image, \"cover\") or str-index($image, \"contain\") {\n    @warn \"Radial-gradient needs to be updated to conform to latest spec.\";\n\n    $gradients: (\n      webkit-image: null,\n      spec-image: $image\n    );\n  }\n\n  @else {\n    $gradients: (\n      webkit-image: -webkit- + $image,\n      spec-image: $image\n    );\n  }\n\n  @return $gradients;\n}\n","// User for linear and radial gradients within background-image or border-image properties\n\n@function _render-gradients($gradient-positions, $gradients, $gradient-type, $vendor: false) {\n  $pre-spec: null;\n  $spec: null;\n  $vendor-gradients: null;\n  @if $gradient-type == linear {\n    @if $gradient-positions {\n      $pre-spec: nth($gradient-positions, 1);\n      $spec:     nth($gradient-positions, 2);\n    }\n  }\n  @else if $gradient-type == radial {\n    $pre-spec: nth($gradient-positions, 1);\n    $spec:     nth($gradient-positions, 2);\n  }\n\n  @if $vendor {\n    $vendor-gradients: -#{$vendor}-#{$gradient-type}-gradient(#{$pre-spec} $gradients);\n  }\n  @else if $vendor == false {\n    $vendor-gradients: \"#{$gradient-type}-gradient(#{$spec} #{$gradients})\";\n    $vendor-gradients: unquote($vendor-gradients);\n  }\n  @return $vendor-gradients;\n}\n","@function _shape-size-stripper($shape-size) {\n  $shape-size-spec: null;\n  @each $value in $shape-size {\n    @if ($value == \"cover\") or ($value == \"contain\") {\n      $value: null;\n    }\n    $shape-size-spec: \"#{$shape-size-spec} #{$value}\";\n  }\n  @return $shape-size-spec;\n}\n","//************************************************************************//\n// Helper function for linear/radial-gradient-parsers.\n// Source: http://sassmeister.com/gist/9647408\n//************************************************************************//\n@function _str-to-num($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers:  0   1   2   3   4   5   6   7   8   9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    }\n\n    @else if $character == \".\" {\n      $divider: 1;\n    }\n\n    @else {\n      @if not $index {\n        $result: if($minus, $result * -1, $result);\n        @return _convert-units($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      }\n\n      @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n  @return if($minus, $result * -1, $result);\n}\n","// http://www.w3.org/TR/css3-animations/#the-animation-name-property-\n// Each of these mixins support comma separated lists of values, which allows different transitions for individual properties to be described in a single style rule. Each value in the list corresponds to the value at that same position in the other properties.\n\n@mixin animation($animations...) {\n  @include prefixer(animation, $animations, webkit moz spec);\n}\n\n@mixin animation-name($names...) {\n  @include prefixer(animation-name, $names, webkit moz spec);\n}\n\n@mixin animation-duration($times...) {\n  @include prefixer(animation-duration, $times, webkit moz spec);\n}\n\n@mixin animation-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out\n  @include prefixer(animation-timing-function, $motions, webkit moz spec);\n}\n\n@mixin animation-iteration-count($values...) {\n  // infinite | <number>\n  @include prefixer(animation-iteration-count, $values, webkit moz spec);\n}\n\n@mixin animation-direction($directions...) {\n  // normal | alternate\n  @include prefixer(animation-direction, $directions, webkit moz spec);\n}\n\n@mixin animation-play-state($states...) {\n  // running | paused\n  @include prefixer(animation-play-state, $states, webkit moz spec);\n}\n\n@mixin animation-delay($times...) {\n  @include prefixer(animation-delay, $times, webkit moz spec);\n}\n\n@mixin animation-fill-mode($modes...) {\n  // none | forwards | backwards | both\n  @include prefixer(animation-fill-mode, $modes, webkit moz spec);\n}\n","@mixin appearance($value) {\n  @include prefixer(appearance, $value, webkit moz ms o spec);\n}\n","@mixin backface-visibility($visibility) {\n  @include prefixer(backface-visibility, $visibility, webkit spec);\n}\n","//************************************************************************//\n// Background property for adding multiple backgrounds using shorthand\n// notation.\n//************************************************************************//\n\n@mixin background($backgrounds...) {\n  $webkit-backgrounds: ();\n  $spec-backgrounds: ();\n\n  @each $background in $backgrounds {\n    $webkit-background: ();\n    $spec-background: ();\n    $background-type: type-of($background);\n\n    @if $background-type == string or $background-type == list {\n      $background-str: if($background-type == list, nth($background, 1), $background);\n\n      $url-str:       str-slice($background-str, 1, 3);\n      $gradient-type: str-slice($background-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$background}\");\n        $webkit-background: map-get($gradients, webkit-image);\n        $spec-background:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-background: $background;\n        $spec-background:   $background;\n      }\n    }\n\n    @else {\n      $webkit-background: $background;\n      $spec-background:   $background;\n    }\n\n    $webkit-backgrounds: append($webkit-backgrounds, $webkit-background, comma);\n    $spec-backgrounds:   append($spec-backgrounds,   $spec-background,   comma);\n  }\n\n  background: $webkit-backgrounds;\n  background: $spec-backgrounds;\n}\n","//************************************************************************//\n// Background-image property for adding multiple background images with\n// gradients, or for stringing multiple gradients together.\n//************************************************************************//\n\n@mixin background-image($images...) {\n  $webkit-images: ();\n  $spec-images: ();\n\n  @each $image in $images {\n    $webkit-image: ();\n    $spec-image: ();\n\n    @if (type-of($image) == string) {\n      $url-str:       str-slice($image, 1, 3);\n      $gradient-type: str-slice($image, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-image: $image;\n        $spec-image:   $image;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser($image);\n        $webkit-image:  map-get($gradients, webkit-image);\n        $spec-image:    map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser($image);\n        $webkit-image: map-get($gradients, webkit-image);\n        $spec-image:   map-get($gradients, spec-image);\n      }\n    }\n\n    $webkit-images: append($webkit-images, $webkit-image, comma);\n    $spec-images:   append($spec-images,   $spec-image,   comma);\n  }\n\n  background-image: $webkit-images;\n  background-image: $spec-images;\n}\n","@mixin border-image($borders...) {\n  $webkit-borders: ();\n  $spec-borders: ();\n\n  @each $border in $borders {\n    $webkit-border: ();\n    $spec-border: ();\n    $border-type: type-of($border);\n\n    @if $border-type == string or list {\n      $border-str: if($border-type == list, nth($border, 1), $border);\n\n      $url-str:       str-slice($border-str, 1, 3);\n      $gradient-type: str-slice($border-str, 1, 6);\n\n      @if $url-str == \"url\" {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n\n      @else if $gradient-type == \"linear\" {\n        $gradients: _linear-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else if $gradient-type == \"radial\" {\n        $gradients: _radial-gradient-parser(\"#{$border}\");\n        $webkit-border: map-get($gradients, webkit-image);\n        $spec-border:   map-get($gradients, spec-image);\n      }\n\n      @else {\n        $webkit-border: $border;\n        $spec-border:   $border;\n      }\n    }\n\n    @else {\n      $webkit-border: $border;\n      $spec-border:   $border;\n    }\n\n    $webkit-borders: append($webkit-borders, $webkit-border, comma);\n    $spec-borders:   append($spec-borders,   $spec-border,   comma);\n  }\n\n  -webkit-border-image: $webkit-borders;\n          border-image: $spec-borders;\n          border-style: solid;\n}\n\n//Examples:\n// @include border-image(url(\"image.png\"));\n// @include border-image(url(\"image.png\") 20 stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow));\n// @include border-image(linear-gradient(45deg, orange, yellow) stretch);\n// @include border-image(linear-gradient(45deg, orange, yellow) 20 30 40 50 stretch round);\n// @include border-image(radial-gradient(top, cover, orange, yellow, orange));\n","@mixin calc($property, $value) {\n  #{$property}: -webkit-calc(#{$value});\n  #{$property}: calc(#{$value});\n}\n","@mixin columns($arg: auto) {\n  // <column-count> || <column-width>\n  @include prefixer(columns, $arg, webkit moz spec);\n}\n\n@mixin column-count($int: auto) {\n  // auto || integer\n  @include prefixer(column-count, $int, webkit moz spec);\n}\n\n@mixin column-gap($length: normal) {\n  // normal || length\n  @include prefixer(column-gap, $length, webkit moz spec);\n}\n\n@mixin column-fill($arg: auto) {\n  // auto || length\n  @include prefixer(column-fill, $arg, webkit moz spec);\n}\n\n@mixin column-rule($arg) {\n  // <border-width> || <border-style> || <color>\n  @include prefixer(column-rule, $arg, webkit moz spec);\n}\n\n@mixin column-rule-color($color) {\n  @include prefixer(column-rule-color, $color, webkit moz spec);\n}\n\n@mixin column-rule-style($style: none) {\n  // none | hidden | dashed | dotted | double | groove | inset | inset | outset | ridge | solid\n  @include prefixer(column-rule-style, $style, webkit moz spec);\n}\n\n@mixin column-rule-width ($width: none) {\n  @include prefixer(column-rule-width, $width, webkit moz spec);\n}\n\n@mixin column-span($arg: none) {\n  // none || all\n  @include prefixer(column-span, $arg, webkit moz spec);\n}\n\n@mixin column-width($length: auto) {\n  // auto || length\n  @include prefixer(column-width, $length, webkit moz spec);\n}\n","@mixin filter($function: none) {\n  // <filter-function> [<filter-function]* | none\n  @include prefixer(filter, $function, webkit spec);\n}\n","// CSS3 Flexible Box Model and property defaults\n\n// Custom shorthand notation for flexbox\n@mixin box($orient: inline-axis, $pack: start, $align: stretch) {\n  @include display-box;\n  @include box-orient($orient);\n  @include box-pack($pack);\n  @include box-align($align);\n}\n\n@mixin display-box {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox; // IE 10\n  display: box;\n}\n\n@mixin box-orient($orient: inline-axis) {\n// horizontal|vertical|inline-axis|block-axis|inherit\n  @include prefixer(box-orient, $orient, webkit moz spec);\n}\n\n@mixin box-pack($pack: start) {\n// start|end|center|justify\n  @include prefixer(box-pack, $pack, webkit moz spec);\n  -ms-flex-pack: $pack; // IE 10\n}\n\n@mixin box-align($align: stretch) {\n// start|end|center|baseline|stretch\n  @include prefixer(box-align, $align, webkit moz spec);\n  -ms-flex-align: $align; // IE 10\n}\n\n@mixin box-direction($direction: normal) {\n// normal|reverse|inherit\n  @include prefixer(box-direction, $direction, webkit moz spec);\n  -ms-flex-direction: $direction; // IE 10\n}\n\n@mixin box-lines($lines: single) {\n// single|multiple\n  @include prefixer(box-lines, $lines, webkit moz spec);\n}\n\n@mixin box-ordinal-group($int: 1) {\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n  -ms-flex-order: $int; // IE 10\n}\n\n@mixin box-flex($value: 0) {\n  @include prefixer(box-flex, $value, webkit moz spec);\n  -ms-flex: $value; // IE 10\n}\n\n@mixin box-flex-group($int: 1) {\n  @include prefixer(box-flex-group, $int, webkit moz spec);\n}\n\n// CSS3 Flexible Box Model and property defaults\n// Unified attributes for 2009, 2011, and 2012 flavours.\n\n// 2009 - display (box | inline-box)\n// 2011 - display (flexbox | inline-flexbox)\n// 2012 - display (flex | inline-flex)\n@mixin display($value) {\n// flex | inline-flex\n  @if $value == \"flex\" {\n    // 2009\n    display: -webkit-box;\n    display: -moz-box;\n    display: box;\n\n    // 2012\n    display: -webkit-flex;\n    display: -moz-flex;\n    display: -ms-flexbox; // 2011 (IE 10)\n    display: flex;\n  } @else if $value == \"inline-flex\" {\n    display: -webkit-inline-box;\n    display: -moz-inline-box;\n    display: inline-box;\n\n    display: -webkit-inline-flex;\n    display: -moz-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n  } @else {\n    display: $value;\n  }\n}\n\n// 2009 - box-flex (integer)\n// 2011 - flex (decimal | width decimal)\n// 2012 - flex (integer integer width)\n@mixin flex($value) {\n\n  // Grab flex-grow for older browsers.\n  $flex-grow: nth($value, 1);\n\n  // 2009\n  @include prefixer(box-flex, $flex-grow, webkit moz spec);\n\n  // 2011 (IE 10), 2012\n  @include prefixer(flex, $value, webkit moz ms spec);\n}\n\n// 2009 - box-orient ( horizontal | vertical | inline-axis | block-axis)\n//      - box-direction (normal | reverse)\n// 2011 - flex-direction (row | row-reverse | column | column-reverse)\n// 2012 - flex-direction (row | row-reverse | column | column-reverse)\n@mixin flex-direction($value: row) {\n\n  // Alt values.\n  $value-2009: $value;\n  $value-2011: $value;\n  $direction: normal;\n\n  @if $value == row {\n    $value-2009: horizontal;\n  } @else if $value == \"row-reverse\" {\n    $value-2009: horizontal;\n    $direction: reverse;\n  } @else if $value == column {\n    $value-2009: vertical;\n  } @else if $value == \"column-reverse\" {\n    $value-2009: vertical;\n    $direction: reverse;\n  }\n\n  // 2009\n  @include prefixer(box-orient, $value-2009, webkit moz spec);\n  @include prefixer(box-direction, $direction, webkit moz spec);\n\n  // 2012\n  @include prefixer(flex-direction, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-direction: $value;\n}\n\n// 2009 - box-lines (single | multiple)\n// 2011 - flex-wrap (nowrap | wrap | wrap-reverse)\n// 2012 - flex-wrap (nowrap | wrap | wrap-reverse)\n@mixin flex-wrap($value: nowrap) {\n  // Alt values\n  $alt-value: $value;\n  @if $value == nowrap {\n    $alt-value: single;\n  } @else if $value == wrap {\n    $alt-value: multiple;\n  } @else if $value == \"wrap-reverse\" {\n    $alt-value: multiple;\n  }\n\n  @include prefixer(box-lines, $alt-value, webkit moz spec);\n  @include prefixer(flex-wrap, $value, webkit moz ms spec);\n}\n\n// 2009 - TODO: parse values into flex-direction/flex-wrap\n// 2011 - TODO: parse values into flex-direction/flex-wrap\n// 2012 - flex-flow (flex-direction || flex-wrap)\n@mixin flex-flow($value) {\n  @include prefixer(flex-flow, $value, webkit moz spec);\n}\n\n// 2009 - box-ordinal-group (integer)\n// 2011 - flex-order (integer)\n// 2012 - order (integer)\n@mixin order($int: 0) {\n  // 2009\n  @include prefixer(box-ordinal-group, $int, webkit moz spec);\n\n  // 2012\n  @include prefixer(order, $int, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-order: $int;\n}\n\n// 2012 - flex-grow (number)\n@mixin flex-grow($number: 0) {\n  @include prefixer(flex-grow, $number, webkit moz spec);\n  -ms-flex-positive: $number;\n}\n\n// 2012 - flex-shrink (number)\n@mixin flex-shrink($number: 1) {\n  @include prefixer(flex-shrink, $number, webkit moz spec);\n  -ms-flex-negative: $number;\n}\n\n// 2012 - flex-basis (number)\n@mixin flex-basis($width: auto) {\n  @include prefixer(flex-basis, $width, webkit moz spec);\n  -ms-flex-preferred-size: $width;\n}\n\n// 2009 - box-pack (start | end | center | justify)\n// 2011 - flex-pack (start | end | center | justify)\n// 2012 - justify-content (flex-start | flex-end | center | space-between | space-around)\n@mixin justify-content($value: flex-start) {\n\n  // Alt values.\n  $alt-value: $value;\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  } @else if $value == \"space-between\" {\n    $alt-value: justify;\n  } @else if $value == \"space-around\" {\n    $alt-value: distribute;\n  }\n\n  // 2009\n  @include prefixer(box-pack, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(justify-content, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-pack: $alt-value;\n}\n\n// 2009 - box-align (start | end | center | baseline | stretch)\n// 2011 - flex-align (start | end | center | baseline | stretch)\n// 2012 - align-items (flex-start | flex-end | center | baseline | stretch)\n@mixin align-items($value: stretch) {\n\n  $alt-value: $value;\n\n  @if $value == \"flex-start\" {\n    $alt-value: start;\n  } @else if $value == \"flex-end\" {\n    $alt-value: end;\n  }\n\n  // 2009\n  @include prefixer(box-align, $alt-value, webkit moz spec);\n\n  // 2012\n  @include prefixer(align-items, $value, webkit moz ms o spec);\n\n  // 2011 (IE 10)\n  -ms-flex-align: $alt-value;\n}\n\n// 2011 - flex-item-align (auto | start | end | center | baseline | stretch)\n// 2012 - align-self (auto | flex-start | flex-end | center | baseline | stretch)\n@mixin align-self($value: auto) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  }\n\n  // 2012\n  @include prefixer(align-self, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-item-align: $value-2011;\n}\n\n// 2011 - flex-line-pack (start | end | center | justify | distribute | stretch)\n// 2012 - align-content (flex-start | flex-end | center | space-between | space-around | stretch)\n@mixin align-content($value: stretch) {\n\n  $value-2011: $value;\n  @if $value == \"flex-start\" {\n    $value-2011: start;\n  } @else if $value == \"flex-end\" {\n    $value-2011: end;\n  } @else if $value == \"space-between\" {\n    $value-2011: justify;\n  } @else if $value == \"space-around\" {\n    $value-2011: distribute;\n  }\n\n  // 2012\n  @include prefixer(align-content, $value, webkit moz spec);\n\n  // 2011 (IE 10)\n  -ms-flex-line-pack: $value-2011;\n}\n","@mixin font-face(\n  $font-family,\n  $file-path,\n  $weight: normal,\n  $style: normal,\n  $asset-pipeline: $asset-pipeline,\n  $file-formats: eot woff2 woff ttf svg) {\n\n  $font-url-prefix: font-url-prefixer($asset-pipeline);\n\n  @font-face {\n    font-family: $font-family;\n    font-style: $style;\n    font-weight: $weight;\n\n    src: font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats,\n      $font-url-prefix\n    );\n  }\n}\n","@mixin font-feature-settings($settings...) {\n  @if length($settings) == 0 { $settings: none; }\n  @include prefixer(font-feature-settings, $settings, webkit moz ms spec);\n}\n","// HiDPI mixin. Default value set to 1.3 to target Google Nexus 7 (http://bjango.com/articles/min-device-pixel-ratio/)\n@mixin hidpi($ratio: 1.3) {\n  @media only screen and (-webkit-min-device-pixel-ratio: $ratio),\n  only screen and (min--moz-device-pixel-ratio: $ratio),\n  only screen and (-o-min-device-pixel-ratio: #{$ratio}/1),\n  only screen and (min-resolution: round($ratio * 96dpi)),\n  only screen and (min-resolution: $ratio * 1dppx) {\n    @content;\n  }\n}\n","@mixin hyphens($hyphenation: none) {\n  // none | manual | auto\n  @include prefixer(hyphens, $hyphenation, webkit moz ms spec);\n}\n","@mixin image-rendering ($mode:auto) {\n\n  @if ($mode == crisp-edges) {\n    -ms-interpolation-mode: nearest-neighbor; // IE8+\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -o-crisp-edges;\n    image-rendering: -webkit-optimize-contrast;\n    image-rendering: crisp-edges;\n  }\n\n  @else {\n    image-rendering: $mode;\n  }\n}\n","// Adds keyframes blocks for supported prefixes, removing redundant prefixes in the block's content\n@mixin keyframes($name) {\n  $original-prefix-for-webkit:    $prefix-for-webkit;\n  $original-prefix-for-mozilla:   $prefix-for-mozilla;\n  $original-prefix-for-microsoft: $prefix-for-microsoft;\n  $original-prefix-for-opera:     $prefix-for-opera;\n  $original-prefix-for-spec:      $prefix-for-spec;\n\n  @if $original-prefix-for-webkit {\n    @include disable-prefix-for-all();\n    $prefix-for-webkit: true !global;\n    @-webkit-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  @if $original-prefix-for-mozilla {\n    @include disable-prefix-for-all();\n    $prefix-for-mozilla: true !global;\n    @-moz-keyframes #{$name} {\n      @content;\n    }\n  }\n\n  $prefix-for-webkit:    $original-prefix-for-webkit    !global;\n  $prefix-for-mozilla:   $original-prefix-for-mozilla   !global;\n  $prefix-for-microsoft: $original-prefix-for-microsoft !global;\n  $prefix-for-opera:     $original-prefix-for-opera     !global;\n  $prefix-for-spec:      $original-prefix-for-spec      !global;\n\n  @if $original-prefix-for-spec {\n    @keyframes #{$name} {\n      @content;\n    }\n  }\n}\n","@mixin linear-gradient($pos, $g1, $g2: null,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $fallback: null) {\n  // Detect what type of value exists in $pos\n  $pos-type: type-of(nth($pos, 1));\n  $pos-spec: null;\n  $pos-degree: null;\n\n  // If $pos is missing from mixin, reassign vars and add default position\n  @if ($pos-type == color) or (nth($pos, 1) == \"transparent\")  {\n    $g10: $g9; $g9: $g8; $g8: $g7; $g7: $g6; $g6: $g5;\n    $g5: $g4; $g4: $g3; $g3: $g2; $g2: $g1; $g1: $pos;\n    $pos: null;\n  }\n\n  @if $pos {\n    $positions: _linear-positions-parser($pos);\n    $pos-degree: nth($positions, 1);\n    $pos-spec:   nth($positions, 2);\n  }\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Set $g1 as the default fallback color\n  $fallback-color: nth($g1, 1);\n\n  // If $fallback is a color use that color as the fallback color\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  background-color: $fallback-color;\n  background-image: -webkit-linear-gradient($pos-degree $full); // Safari 5.1+, Chrome\n  background-image: unquote(\"linear-gradient(#{$pos-spec}#{$full})\");\n}\n","@mixin perspective($depth: none) {\n  // none | <length>\n  @include prefixer(perspective, $depth, webkit moz spec);\n}\n\n@mixin perspective-origin($value: 50% 50%) {\n  @include prefixer(perspective-origin, $value, webkit moz spec);\n}\n","@mixin placeholder {\n  $placeholders: \":-webkit-input\" \":-moz\" \"-moz\" \"-ms-input\";\n  @each $placeholder in $placeholders {\n    &:#{$placeholder}-placeholder {\n      @content;\n    }\n  }\n}\n","// Requires Sass 3.1+\n@mixin radial-gradient($g1, $g2,\n                       $g3: null, $g4: null,\n                       $g5: null, $g6: null,\n                       $g7: null, $g8: null,\n                       $g9: null, $g10: null,\n                       $pos: null,\n                       $shape-size: null,\n                       $fallback: null) {\n\n  $data: _radial-arg-parser($g1, $g2, $pos, $shape-size);\n  $g1:  nth($data, 1);\n  $g2:  nth($data, 2);\n  $pos: nth($data, 3);\n  $shape-size: nth($data, 4);\n\n  $full: $g1, $g2, $g3, $g4, $g5, $g6, $g7, $g8, $g9, $g10;\n\n  // Strip deprecated cover/contain for spec\n  $shape-size-spec: _shape-size-stripper($shape-size);\n\n  // Set $g1 as the default fallback color\n  $first-color: nth($full, 1);\n  $fallback-color: nth($first-color, 1);\n\n  @if (type-of($fallback) == color) or ($fallback == \"transparent\") {\n    $fallback-color: $fallback;\n  }\n\n  // Add Commas and spaces\n  $shape-size: if($shape-size, \"#{$shape-size}, \", null);\n  $pos:        if($pos, \"#{$pos}, \", null);\n  $pos-spec:   if($pos, \"at #{$pos}\", null);\n  $shape-size-spec: if(($shape-size-spec != \" \") and ($pos == null), \"#{$shape-size-spec}, \", \"#{$shape-size-spec} \");\n\n  background-color:  $fallback-color;\n  background-image: -webkit-radial-gradient(#{$pos}#{$shape-size}#{$full});\n  background-image: radial-gradient(#{$shape-size-spec}#{$pos-spec}#{$full});\n}\n","@charset \"UTF-8\";\r\n\r\n/// Outputs the spec and prefixed versions of the `::selection` pseudo-element.\r\n///\r\n/// @param {Bool} $current-selector [false]\r\n///   If set to `true`, it takes the current element into consideration.\r\n///\r\n/// @example scss - Usage\r\n///   .element {\r\n///     @include selection(true) {\r\n///       background-color: #ffbb52;\r\n///     }\r\n///   }\r\n///\r\n/// @example css - CSS Output\r\n///   .element::-moz-selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n///\r\n///   .element::selection {\r\n///     background-color: #ffbb52;\r\n///   }\r\n\r\n@mixin selection($current-selector: false) {\r\n  @if $current-selector {\r\n    &::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    &::selection {\r\n      @content;\r\n    }\r\n  } @else {\r\n    ::-moz-selection {\r\n      @content;\r\n    }\r\n\r\n    ::selection {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@mixin text-decoration($value) {\n// <text-decoration-line> || <text-decoration-style> || <text-decoration-color>\n  @include prefixer(text-decoration, $value, moz);\n}\n\n@mixin text-decoration-line($line: none) {\n// none || underline || overline || line-through\n  @include prefixer(text-decoration-line, $line, moz);\n}\n\n@mixin text-decoration-style($style: solid) {\n// solid || double || dotted || dashed || wavy\n  @include prefixer(text-decoration-style, $style, moz webkit);\n}\n\n@mixin text-decoration-color($color: currentColor) {\n// currentColor || <color>\n  @include prefixer(text-decoration-color, $color, moz);\n}\n","@mixin transform($property: none) {\n  // none | <transform-function>\n  @include prefixer(transform, $property, webkit moz ms o spec);\n}\n\n@mixin transform-origin($axes: 50%) {\n  // x-axis - left | center | right  | length | %\n  // y-axis - top  | center | bottom | length | %\n  // z-axis -                          length\n  @include prefixer(transform-origin, $axes, webkit moz ms o spec);\n}\n\n@mixin transform-style($style: flat) {\n  @include prefixer(transform-style, $style, webkit moz ms o spec);\n}\n","// Shorthand mixin. Supports multiple parentheses-deliminated values for each variable.\n// Example: @include transition (all 2s ease-in-out);\n//          @include transition (opacity 1s ease-in 2s, width 2s ease-out);\n//          @include transition-property (transform, opacity);\n\n@mixin transition($properties...) {\n  // Fix for vendor-prefix transform property\n  $needs-prefixes: false;\n  $webkit: ();\n  $moz: ();\n  $spec: ();\n\n  // Create lists for vendor-prefixed transform\n  @each $list in $properties {\n    @if nth($list, 1) == \"transform\" {\n      $needs-prefixes: true;\n      $list1: -webkit-transform;\n      $list2: -moz-transform;\n      $list3: ();\n\n      @each $var in $list {\n        $list3: join($list3, $var);\n\n        @if $var != \"transform\" {\n          $list1: join($list1, $var);\n          $list2: join($list2, $var);\n        }\n      }\n\n      $webkit: append($webkit, $list1);\n      $moz:    append($moz,    $list2);\n      $spec:   append($spec,   $list3);\n    } @else {\n      $webkit: append($webkit, $list, comma);\n      $moz:    append($moz,    $list, comma);\n      $spec:   append($spec,   $list, comma);\n    }\n  }\n\n  @if $needs-prefixes {\n    -webkit-transition: $webkit;\n       -moz-transition: $moz;\n            transition: $spec;\n  } @else {\n    @if length($properties) >= 1 {\n      @include prefixer(transition, $properties, webkit moz spec);\n    } @else {\n      $properties: all 0.15s ease-out 0s;\n      @include prefixer(transition, $properties, webkit moz spec);\n    }\n  }\n}\n\n@mixin transition-property($properties...) {\n  -webkit-transition-property: transition-property-names($properties, \"webkit\");\n     -moz-transition-property: transition-property-names($properties, \"moz\");\n          transition-property: transition-property-names($properties, false);\n}\n\n@mixin transition-duration($times...) {\n  @include prefixer(transition-duration, $times, webkit moz spec);\n}\n\n@mixin transition-timing-function($motions...) {\n  // ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier()\n  @include prefixer(transition-timing-function, $motions, webkit moz spec);\n}\n\n@mixin transition-delay($times...) {\n  @include prefixer(transition-delay, $times, webkit moz spec);\n}\n","@mixin user-select($value: none) {\n  @include prefixer(user-select, $value, webkit moz ms spec);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-color` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-left-color: #e8ae1a;\n///     border-right-color: #76cd9c;\n///     border-top-color: #a60b55;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-color`\n\n@mixin border-color($vals...) {\n  @include directional-property(border, color, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-radius` on both corners on the side of a box.\n///\n/// @param {Number} $radii\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element-one {\n///     @include border-top-radius(5px);\n///   }\n///\n///   .element-two {\n///     @include border-left-radius(3px);\n///   }\n///\n/// @example css - CSS Output\n///   .element-one {\n///     border-top-left-radius: 5px;\n///     border-top-right-radius: 5px;\n///   }\n///\n///   .element-two {\n///     border-bottom-left-radius: 3px;\n///     border-top-left-radius: 3px;\n///   }\n///\n/// @output `border-radius`\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-style` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dashed null solid);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: solid;\n///     border-top-style: dashed;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-style`\n\n@mixin border-style($vals...) {\n  @include directional-property(border, style, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `border-width` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-width(1em null 20px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-width: 20px;\n///     border-top-width: 1em;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `border-width`\n\n@mixin border-width($vals...) {\n  @include directional-property(border, width, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Generates variables for all buttons. Please note that you must use interpolation on the variable: `#{$all-buttons}`.\n///\n/// @example scss - Usage\n///   #{$all-buttons} {\n///     background-color: #f00;\n///   }\n///\n///   #{$all-buttons-focus},\n///   #{$all-buttons-hover} {\n///     background-color: #0f0;\n///   }\n///\n///   #{$all-buttons-active} {\n///     background-color: #00f;\n///   }\n///\n/// @example css - CSS Output\n///   button,\n///   input[type=\"button\"],\n///   input[type=\"reset\"],\n///   input[type=\"submit\"] {\n///     background-color: #f00;\n///   }\n///\n///   button:focus,\n///   input[type=\"button\"]:focus,\n///   input[type=\"reset\"]:focus,\n///   input[type=\"submit\"]:focus,\n///   button:hover,\n///   input[type=\"button\"]:hover,\n///   input[type=\"reset\"]:hover,\n///   input[type=\"submit\"]:hover {\n///     background-color: #0f0;\n///   }\n///\n///   button:active,\n///   input[type=\"button\"]:active,\n///   input[type=\"reset\"]:active,\n///   input[type=\"submit\"]:active {\n///     background-color: #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n///\n/// @todo Remove double assigned variables (Lines 59–62) in v5.0.0\n\n$buttons-list: 'button',\n               'input[type=\"button\"]',\n               'input[type=\"reset\"]',\n               'input[type=\"submit\"]';\n\n$all-buttons:        assign-inputs($buttons-list);\n$all-buttons-active: assign-inputs($buttons-list, active);\n$all-buttons-focus:  assign-inputs($buttons-list, focus);\n$all-buttons-hover:  assign-inputs($buttons-list, hover);\n\n$all-button-inputs:        $all-buttons;\n$all-button-inputs-active: $all-buttons-active;\n$all-button-inputs-focus:  $all-buttons-focus;\n$all-button-inputs-hover:  $all-buttons-hover;\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://cssmojo.com/latest_new_clearfix_so_far/\n///\n/// @example scss - Usage\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css - CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: table;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Truncates text and adds an ellipsis to represent overflow.\n///\n/// @param {Number} $width [100%]\n///   Max-width for the string to respect before being truncated\n///\n/// @example scss - Usage\n///   .element {\n///     @include ellipsis;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: inline-block;\n///     max-width: 100%;\n///     overflow: hidden;\n///     text-overflow: ellipsis;\n///     white-space: nowrap;\n///     word-wrap: normal;\n///   }\n\n@mixin ellipsis($width: 100%) {\n  display: inline-block;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n","@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n","/// Hides the text in an element, commonly used to show an image. Some elements will need block-level styles applied.\n///\n/// @link http://zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement\n///\n/// @example scss - Usage\n///   .element {\n///     @include hide-text;\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n///\n/// @todo Remove height argument in v5.0.0\n\n@mixin hide-text($height: null) {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n\n  @if $height {\n    @warn \"The `hide-text` mixin has changed and no longer requires a height. The height argument will no longer be accepted in v5.0.0\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `margin` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include margin(null 10px 3em 20vh);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-bottom: 3em;\n///     margin-left: 20vh;\n///     margin-right: 10px;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `margin`\n\n@mixin margin($vals...) {\n  @include directional-property(margin, false, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for targeting `padding` on specific sides of a box. Use a `null` value to “skip” a side.\n///\n/// @param {Arglist} $vals\n///   List of arguments\n///\n/// @example scss - Usage\n///   .element {\n///     @include padding(12vh null 10px 5%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     padding-bottom: 10px;\n///     padding-left: 5%;\n///     padding-top: 12vh;\n///   }\n///\n/// @require {mixin} directional-property\n///\n/// @output `padding`\n\n@mixin padding($vals...) {\n  @include directional-property(padding, false, $vals...);\n}\n","@charset \"UTF-8\";\n\n/// Provides a quick method for setting an element’s position. Use a `null` value to “skip” a side.\n///\n/// @param {Position} $position [relative]\n///   A CSS position value\n///\n/// @param {Arglist} $coordinates [null null null null]\n///   List of values that correspond to the 4-value syntax for the edges of a box\n///\n/// @example scss - Usage\n///   .element {\n///     @include position(absolute, 0 null null 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     left: 10em;\n///     position: absolute;\n///     top: 0;\n///   }\n///\n/// @require {function} is-length\n/// @require {function} unpack\n\n@mixin position($position: relative, $coordinates: null null null null) {\n  @if type-of($position) == list {\n    $coordinates: $position;\n    $position: relative;\n  }\n\n  $coordinates: unpack($coordinates);\n\n  $offsets: (\n    top:    nth($coordinates, 1),\n    right:  nth($coordinates, 2),\n    bottom: nth($coordinates, 3),\n    left:   nth($coordinates, 4)\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// A mixin for generating vendor prefixes on non-standardized properties.\n///\n/// @param {String} $property\n///   Property to prefix\n///\n/// @param {*} $value\n///   Value to use\n///\n/// @param {List} $prefixes\n///   Prefixes to define\n///\n/// @example scss - Usage\n///   .element {\n///     @include prefixer(border-radius, 10px, webkit ms spec);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     -webkit-border-radius: 10px;\n///     -moz-border-radius: 10px;\n///     border-radius: 10px;\n///   }\n///\n/// @require {variable} $prefix-for-webkit\n/// @require {variable} $prefix-for-mozilla\n/// @require {variable} $prefix-for-microsoft\n/// @require {variable} $prefix-for-opera\n/// @require {variable} $prefix-for-spec\n\n@mixin prefixer($property, $value, $prefixes) {\n  @each $prefix in $prefixes {\n    @if $prefix == webkit {\n      @if $prefix-for-webkit {\n        -webkit-#{$property}: $value;\n      }\n    } @else if $prefix == moz {\n      @if $prefix-for-mozilla {\n        -moz-#{$property}: $value;\n      }\n    } @else if $prefix == ms {\n      @if $prefix-for-microsoft {\n        -ms-#{$property}: $value;\n      }\n    } @else if $prefix == o {\n      @if $prefix-for-opera {\n        -o-#{$property}: $value;\n      }\n    } @else if $prefix == spec {\n      @if $prefix-for-spec {\n        #{$property}: $value;\n      }\n    } @else  {\n      @warn \"Unrecognized prefix: #{$prefix}\";\n    }\n  }\n}\n\n@mixin disable-prefix-for-all() {\n  $prefix-for-webkit:    false !global;\n  $prefix-for-mozilla:   false !global;\n  $prefix-for-microsoft: false !global;\n  $prefix-for-opera:     false !global;\n  $prefix-for-spec:      false !global;\n}\n","@mixin retina-image($filename, $background-size, $extension: png, $retina-filename: null, $retina-suffix: _2x, $asset-pipeline: $asset-pipeline) {\n  @if $asset-pipeline {\n    background-image: image-url(\"#{$filename}.#{$extension}\");\n  } @else {\n    background-image:       url(\"#{$filename}.#{$extension}\");\n  }\n\n  @include hidpi {\n    @if $asset-pipeline {\n      @if $retina-filename {\n        background-image: image-url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: image-url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    } @else {\n      @if $retina-filename {\n        background-image: url(\"#{$retina-filename}.#{$extension}\");\n      } @else {\n        background-image: url(\"#{$filename}#{$retina-suffix}.#{$extension}\");\n      }\n    }\n\n    background-size: $background-size;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element.\n///\n/// @param {List} $size\n///   A list of at most 2 size values.\n///\n///   If there is only a single value in `$size` it is used for both width and height. All units are supported.\n///\n/// @example scss - Usage\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   .second-element {\n///     @include size(auto 10em);\n///   }\n///\n/// @example css - CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @todo Refactor in 5.0.0 to use a comma-separated argument\n\n@mixin size($value) {\n  $width: nth($value, 1);\n  $height: $width;\n\n  @if length($value) > 1 {\n    $height: nth($value, 2);\n  }\n\n  @if is-size($height) {\n    height: $height;\n  } @else {\n    @warn \"`#{$height}` is not a valid length for the `$height` parameter in the `size` mixin.\";\n  }\n\n  @if is-size($width) {\n    width: $width;\n  } @else {\n    @warn \"`#{$width}` is not a valid length for the `$width` parameter in the `size` mixin.\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Generates variables for all text-based inputs. Please note that you must use interpolation on the variable: `#{$all-text-inputs}`.\n///\n/// @example scss - Usage\n///   #{$all-text-inputs} {\n///     border: 1px solid #f00;\n///   }\n///\n///   #{$all-text-inputs-focus},\n///   #{$all-text-inputs-hover} {\n///     border: 1px solid #0f0;\n///   }\n///\n///   #{$all-text-inputs-active} {\n///     border: 1px solid #00f;\n///   }\n///\n/// @example css - CSS Output\n///   input[type=\"color\"],\n///   input[type=\"date\"],\n///   input[type=\"datetime\"],\n///   input[type=\"datetime-local\"],\n///   input[type=\"email\"],\n///   input[type=\"month\"],\n///   input[type=\"number\"],\n///   input[type=\"password\"],\n///   input[type=\"search\"],\n///   input[type=\"tel\"],\n///   input[type=\"text\"],\n///   input[type=\"time\"],\n///   input[type=\"url\"],\n///   input[type=\"week\"],\n///   textarea {\n///     border: 1px solid #f00;\n///   }\n///\n///   input[type=\"color\"]:focus,\n///   input[type=\"date\"]:focus,\n///   input[type=\"datetime\"]:focus,\n///   input[type=\"datetime-local\"]:focus,\n///   input[type=\"email\"]:focus,\n///   input[type=\"month\"]:focus,\n///   input[type=\"number\"]:focus,\n///   input[type=\"password\"]:focus,\n///   input[type=\"search\"]:focus,\n///   input[type=\"tel\"]:focus,\n///   input[type=\"text\"]:focus,\n///   input[type=\"time\"]:focus,\n///   input[type=\"url\"]:focus,\n///   input[type=\"week\"]:focus,\n///   textarea:focus,\n///   input[type=\"color\"]:hover,\n///   input[type=\"date\"]:hover,\n///   input[type=\"datetime\"]:hover,\n///   input[type=\"datetime-local\"]:hover,\n///   input[type=\"email\"]:hover,\n///   input[type=\"month\"]:hover,\n///   input[type=\"number\"]:hover,\n///   input[type=\"password\"]:hover,\n///   input[type=\"search\"]:hover,\n///   input[type=\"tel\"]:hover,\n///   input[type=\"text\"]:hover,\n///   input[type=\"time\"]:hover,\n///   input[type=\"url\"]:hover,\n///   input[type=\"week\"]:hover,\n///   textarea:hover {\n///     border: 1px solid #0f0;\n///   }\n///\n///   input[type=\"color\"]:active,\n///   input[type=\"date\"]:active,\n///   input[type=\"datetime\"]:active,\n///   input[type=\"datetime-local\"]:active,\n///   input[type=\"email\"]:active,\n///   input[type=\"month\"]:active,\n///   input[type=\"number\"]:active,\n///   input[type=\"password\"]:active,\n///   input[type=\"search\"]:active,\n///   input[type=\"tel\"]:active,\n///   input[type=\"text\"]:active,\n///   input[type=\"time\"]:active,\n///   input[type=\"url\"]:active,\n///   input[type=\"week\"]:active,\n///   textarea:active {\n///     border: 1px solid #00f;\n///   }\n///\n/// @require assign-inputs\n///\n/// @type List\n\n$text-inputs-list: 'input[type=\"color\"]',\n                   'input[type=\"date\"]',\n                   'input[type=\"datetime\"]',\n                   'input[type=\"datetime-local\"]',\n                   'input[type=\"email\"]',\n                   'input[type=\"month\"]',\n                   'input[type=\"number\"]',\n                   'input[type=\"password\"]',\n                   'input[type=\"search\"]',\n                   'input[type=\"tel\"]',\n                   'input[type=\"text\"]',\n                   'input[type=\"time\"]',\n                   'input[type=\"url\"]',\n                   'input[type=\"week\"]',\n                   'input:not([type])',\n                   'textarea';\n\n$all-text-inputs:        assign-inputs($text-inputs-list);\n$all-text-inputs-active: assign-inputs($text-inputs-list, active);\n$all-text-inputs-focus:  assign-inputs($text-inputs-list, focus);\n$all-text-inputs-hover:  assign-inputs($text-inputs-list, hover);\n","@charset \"UTF-8\";\n\n/// CSS cubic-bezier timing functions. Timing functions courtesy of jquery.easie (github.com/jaukia/easie)\n///\n/// Timing functions are the same as demoed here: http://jqueryui.com/resources/demos/effect/easing.html\n///\n/// @type cubic-bezier\n\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n","@mixin triangle($size, $color, $direction) {\n  $width: nth($size, 1);\n  $height: nth($size, length($size));\n  $foreground-color: nth($color, 1);\n  $background-color: if(length($color) == 2, nth($color, 2), transparent);\n  height: 0;\n  width: 0;\n\n  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {\n    $width: $width / 2;\n    $height: if(length($size) > 1, $height, $height/2);\n\n    @if $direction == up {\n      border-bottom: $height solid $foreground-color;\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n    } @else if $direction == right {\n      border-bottom: $width solid $background-color;\n      border-left: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    } @else if $direction == down {\n      border-left: $width solid $background-color;\n      border-right: $width solid $background-color;\n      border-top: $height solid $foreground-color;\n    } @else if $direction == left {\n      border-bottom: $width solid $background-color;\n      border-right: $height solid $foreground-color;\n      border-top: $width solid $background-color;\n    }\n  } @else if ($direction == up-right) or ($direction == up-left) {\n    border-top: $height solid $foreground-color;\n\n    @if $direction == up-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == up-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == down-right) or ($direction == down-left) {\n    border-bottom: $height solid $foreground-color;\n\n    @if $direction == down-right {\n      border-left:  $width solid $background-color;\n    } @else if $direction == down-left {\n      border-right: $width solid $background-color;\n    }\n  } @else if ($direction == inset-up) {\n    border-color: $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-down) {\n    border-color: $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $height $width;\n  } @else if ($direction == inset-right) {\n    border-color: $background-color $background-color $background-color $foreground-color;\n    border-style: solid;\n    border-width: $width $height;\n  } @else if ($direction == inset-left) {\n    border-color: $background-color $foreground-color $background-color $background-color;\n    border-style: solid;\n    border-width: $width $height;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides an easy way to change the `word-wrap` property.\n///\n/// @param {String} $wrap [break-word]\n///   Value for the `word-break` property.\n///\n/// @example scss - Usage\n///   .wrapper {\n///     @include word-wrap(break-word);\n///   }\n///\n/// @example css - CSS Output\n///   .wrapper {\n///     overflow-wrap: break-word;\n///     word-break: break-all;\n///     word-wrap: break-word;\n///   }\n\n@mixin word-wrap($wrap: break-word) {\n  overflow-wrap: $wrap;\n  word-wrap: $wrap;\n\n  @if $wrap == break-word {\n    word-break: break-all;\n  } @else {\n    word-break: $wrap;\n  }\n}\n","// The following features have been deprecated and will be removed in the next MAJOR version release\n\n@mixin inline-block {\n  display: inline-block;\n\n  @warn \"The inline-block mixin is deprecated and will be removed in the next major version release\";\n}\n\n@mixin button ($style: simple, $base-color: #4294f0, $text-size: inherit, $padding: 7px 18px) {\n\n  @if type-of($style) == string and type-of($base-color) == color {\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == string and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: #4294f0;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == color {\n    $base-color: $style;\n    $style: simple;\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == color and type-of($base-color) == number {\n    $padding: $text-size;\n    $text-size: $base-color;\n    $base-color: $style;\n    $style: simple;\n\n    @if $padding == inherit {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  @if type-of($style) == number {\n    $padding: $base-color;\n    $text-size: $style;\n    $base-color: #4294f0;\n    $style: simple;\n\n    @if $padding == #4294f0 {\n      $padding: 7px 18px;\n    }\n\n    @include buttonstyle($style, $base-color, $text-size, $padding);\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    opacity: 0.5;\n  }\n\n  @warn \"The button mixin is deprecated and will be removed in the next major version release\";\n}\n\n// Selector Style Button\n@mixin buttonstyle($type, $b-color, $t-size, $pad) {\n  // Grayscale button\n  @if $type == simple and $b-color == grayscale($b-color) {\n    @include simple($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == shiny and $b-color == grayscale($b-color) {\n    @include shiny($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == pill and $b-color == grayscale($b-color) {\n    @include pill($b-color, true, $t-size, $pad);\n  }\n\n  @if $type == flat and $b-color == grayscale($b-color) {\n    @include flat($b-color, true, $t-size, $pad);\n  }\n\n  // Colored button\n  @if $type == simple {\n    @include simple($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == shiny {\n    @include shiny($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == pill {\n    @include pill($b-color, false, $t-size, $pad);\n  }\n\n  @else if $type == flat {\n    @include flat($b-color, false, $t-size, $pad);\n  }\n}\n\n// Simple Button\n@mixin simple($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $saturation:  9%,  $lightness: -14%);\n  $inset-shadow:  adjust-color($base-color, $saturation: -8%,  $lightness:  15%);\n  $stop-gradient: adjust-color($base-color, $saturation:  9%,  $lightness: -11%);\n  $text-shadow:   adjust-color($base-color, $saturation:  15%, $lightness: -18%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border;\n  border-radius: 3px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-decoration: none;\n  text-shadow: 0 1px 0 $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n    $inset-shadow-hover:  adjust-color($base-color, $saturation: -7%, $lightness:  5%);\n    $stop-gradient-hover: adjust-color($base-color, $saturation:  8%, $lightness: -14%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $border-active:       adjust-color($base-color, $saturation: 9%, $lightness: -14%);\n    $inset-shadow-active: adjust-color($base-color, $saturation: 7%, $lightness: -17%);\n\n    @if $grayscale == true {\n      $border-active:       grayscale($border-active);\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    border: 1px solid $border-active;\n    box-shadow: inset 0 0 8px 4px $inset-shadow-active, inset 0 0 8px 4px $inset-shadow-active;\n  }\n}\n\n// Shiny Button\n@mixin shiny($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border:        adjust-color($base-color, $red: -117, $green: -111, $blue: -81);\n  $border-bottom: adjust-color($base-color, $red: -126, $green: -127, $blue: -122);\n  $fourth-stop:   adjust-color($base-color, $red: -79,  $green: -70,  $blue: -46);\n  $inset-shadow:  adjust-color($base-color, $red:  37,  $green:  29,  $blue:  12);\n  $second-stop:   adjust-color($base-color, $red: -56,  $green: -50,  $blue: -33);\n  $text-shadow:   adjust-color($base-color, $red: -140, $green: -141, $blue: -114);\n  $third-stop:    adjust-color($base-color, $red: -86,  $green: -75,  $blue: -48);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border:        grayscale($border);\n    $border-bottom: grayscale($border-bottom);\n    $fourth-stop:   grayscale($fourth-stop);\n    $inset-shadow:  grayscale($inset-shadow);\n    $second-stop:   grayscale($second-stop);\n    $text-shadow:   grayscale($text-shadow);\n    $third-stop:    grayscale($third-stop);\n  }\n\n  @include linear-gradient(top, $base-color 0%, $second-stop 50%, $third-stop 50%, $fourth-stop 100%);\n\n  border: 1px solid $border;\n  border-bottom: 1px solid $border-bottom;\n  border-radius: 5px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n\n  &:hover:not(:disabled) {\n    $first-stop-hover:  adjust-color($base-color, $red: -13, $green: -15, $blue: -18);\n    $second-stop-hover: adjust-color($base-color, $red: -66, $green: -62, $blue: -51);\n    $third-stop-hover:  adjust-color($base-color, $red: -93, $green: -85, $blue: -66);\n    $fourth-stop-hover: adjust-color($base-color, $red: -86, $green: -80, $blue: -63);\n\n    @if $grayscale == true {\n      $first-stop-hover:  grayscale($first-stop-hover);\n      $second-stop-hover: grayscale($second-stop-hover);\n      $third-stop-hover:  grayscale($third-stop-hover);\n      $fourth-stop-hover: grayscale($fourth-stop-hover);\n    }\n\n    @include linear-gradient(top, $first-stop-hover  0%,\n                                  $second-stop-hover 50%,\n                                  $third-stop-hover  50%,\n                                  $fourth-stop-hover 100%);\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $inset-shadow-active: adjust-color($base-color, $red: -111, $green: -116, $blue: -122);\n\n    @if $grayscale == true {\n      $inset-shadow-active: grayscale($inset-shadow-active);\n    }\n\n    box-shadow: inset 0 0 20px 0 $inset-shadow-active;\n  }\n}\n\n// Pill Button\n@mixin pill($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n  $border-bottom: adjust-color($base-color, $hue:  8, $saturation: -11%, $lightness: -26%);\n  $border-sides:  adjust-color($base-color, $hue:  4, $saturation: -21%, $lightness: -21%);\n  $border-top:    adjust-color($base-color, $hue: -1, $saturation: -30%, $lightness: -15%);\n  $inset-shadow:  adjust-color($base-color, $hue: -1, $saturation: -1%,  $lightness:  7%);\n  $stop-gradient: adjust-color($base-color, $hue:  8, $saturation:  14%, $lightness: -10%);\n  $text-shadow:   adjust-color($base-color, $hue:  5, $saturation: -19%, $lightness: -15%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n    $text-shadow: adjust-color($base-color, $saturation: 10%, $lightness: 4%);\n  }\n\n  @if $grayscale == true {\n    $border-bottom: grayscale($border-bottom);\n    $border-sides:  grayscale($border-sides);\n    $border-top:    grayscale($border-top);\n    $inset-shadow:  grayscale($inset-shadow);\n    $stop-gradient: grayscale($stop-gradient);\n    $text-shadow:   grayscale($text-shadow);\n  }\n\n  border: 1px solid $border-top;\n  border-color: $border-top $border-sides $border-bottom;\n  border-radius: 16px;\n  box-shadow: inset 0 1px 0 0 $inset-shadow;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: normal;\n  line-height: 1;\n  @include linear-gradient ($base-color, $stop-gradient);\n  padding: $padding;\n  text-align: center;\n  text-decoration: none;\n  text-shadow: 0 -1px 1px $text-shadow;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled) {\n    $base-color-hover:    adjust-color($base-color,                                $lightness: -4.5%);\n    $border-bottom:       adjust-color($base-color, $hue:  8, $saturation:  13.5%, $lightness: -32%);\n    $border-sides:        adjust-color($base-color, $hue:  4, $saturation: -2%,    $lightness: -27%);\n    $border-top:          adjust-color($base-color, $hue: -1, $saturation: -17%,   $lightness: -21%);\n    $inset-shadow-hover:  adjust-color($base-color,           $saturation: -1%,    $lightness:  3%);\n    $stop-gradient-hover: adjust-color($base-color, $hue:  8, $saturation: -4%,    $lightness: -15.5%);\n    $text-shadow-hover:   adjust-color($base-color, $hue:  5, $saturation: -5%,    $lightness: -22%);\n\n    @if $grayscale == true {\n      $base-color-hover:    grayscale($base-color-hover);\n      $border-bottom:       grayscale($border-bottom);\n      $border-sides:        grayscale($border-sides);\n      $border-top:          grayscale($border-top);\n      $inset-shadow-hover:  grayscale($inset-shadow-hover);\n      $stop-gradient-hover: grayscale($stop-gradient-hover);\n      $text-shadow-hover:   grayscale($text-shadow-hover);\n    }\n\n    @include linear-gradient ($base-color-hover, $stop-gradient-hover);\n\n    background-clip: padding-box;\n    border: 1px solid $border-top;\n    border-color: $border-top $border-sides $border-bottom;\n    box-shadow: inset 0 1px 0 0 $inset-shadow-hover;\n    cursor: pointer;\n    text-shadow: 0 -1px 1px $text-shadow-hover;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $active-color:         adjust-color($base-color, $hue: 4,  $saturation: -12%,  $lightness: -10%);\n    $border-active:        adjust-color($base-color, $hue: 6,  $saturation: -2.5%, $lightness: -30%);\n    $border-bottom-active: adjust-color($base-color, $hue: 11, $saturation:  6%,   $lightness: -31%);\n    $inset-shadow-active:  adjust-color($base-color, $hue: 9,  $saturation:  2%,   $lightness: -21.5%);\n    $text-shadow-active:   adjust-color($base-color, $hue: 5,  $saturation: -12%,  $lightness: -21.5%);\n\n    @if $grayscale == true {\n      $active-color:         grayscale($active-color);\n      $border-active:        grayscale($border-active);\n      $border-bottom-active: grayscale($border-bottom-active);\n      $inset-shadow-active:  grayscale($inset-shadow-active);\n      $text-shadow-active:   grayscale($text-shadow-active);\n    }\n\n    background: $active-color;\n    border: 1px solid $border-active;\n    border-bottom: 1px solid $border-bottom-active;\n    box-shadow: inset 0 0 6px 3px $inset-shadow-active;\n    text-shadow: 0 -1px 1px $text-shadow-active;\n  }\n}\n\n// Flat Button\n@mixin flat($base-color, $grayscale: false, $textsize: inherit, $padding: 7px 18px) {\n  $color:         hsl(0, 0, 100%);\n\n  @if is-light($base-color) {\n    $color:       hsl(0, 0, 20%);\n  }\n\n  background-color: $base-color;\n  border-radius: 3px;\n  border: 0;\n  color: $color;\n  display: inline-block;\n  font-size: $textsize;\n  font-weight: bold;\n  padding: $padding;\n  text-decoration: none;\n  background-clip: padding-box;\n\n  &:hover:not(:disabled){\n    $base-color-hover:    adjust-color($base-color, $saturation: 4%, $lightness: 5%);\n\n    @if $grayscale == true {\n      $base-color-hover: grayscale($base-color-hover);\n    }\n\n    background-color: $base-color-hover;\n    cursor: pointer;\n  }\n\n  &:active:not(:disabled),\n  &:focus:not(:disabled) {\n    $base-color-active: adjust-color($base-color, $saturation: -4%, $lightness: -5%);\n\n    @if $grayscale == true {\n      $base-color-active: grayscale($base-color-active);\n    }\n\n    background-color: $base-color-active;\n    cursor: pointer;\n  }\n}\n\n// Flexible grid\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n\n  @warn \"The flex-grid function is deprecated and will be removed in the next major version release\";\n}\n\n// Flexible gutter\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n\n  @warn \"The flex-gutter function is deprecated and will be removed in the next major version release\";\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n\n  @warn \"The grid-width function is deprecated and will be removed in the next major version release\";\n}\n\n@function golden-ratio($value, $increment) {\n  @return modular-scale($increment, $value, $ratio: $golden);\n\n  @warn \"The golden-ratio function is deprecated and will be removed in the next major version release. Please use the modular-scale function, instead.\";\n}\n\n@mixin box-sizing($box) {\n  @include prefixer(box-sizing, $box, webkit moz spec);\n\n  @warn \"The box-sizing mixin is deprecated and will be removed in the next major version release. This property can now be used un-prefixed.\";\n}\n","/************************************\n * Close button\n************************************/\n#closebt-container {\n\tposition: relative;\n\twidth:100%;\n\ttext-align:center;\n\tmargin-top:40px;\n}\n\n.svg g {\n   circle {\n        stroke: $bodytext;\n    }\n    \n    line  {\n       stroke: $bodytext; \n    }\n}\n\n#title-intro {    \n    margin-top: -40px;\n    margin-bottom: 15px;\n}\n\n.closebt {\n\t-webkit-transition: all 0.2s;\n\t-moz-transition: all 0.2s;\n\t-ms-transition: all 0.2s;\n\t-o-transition: all 0.2s;\n\ttransition: all 0.2s;\n\tcursor:pointer;\n}\n\n.closebt:hover {\n\ttransform:rotate(90deg);\n}\n\n#modal-content {\n    margin-top: 100px;\n    @include display(flex);\n    @include flex-direction(column);\n    @include justify-content(center);\n    @include align-items(center);\n}\n\n#modal-content > div {\n    opacity: 1;\n    display: block;\n    transform: scaleX(1) scaleY(1);\n    transform-origin: 50% 50% 0px;\n}\n\n#bookmark-size {\n    width: 9%;\n    height: auto;\n    margin-top: -14px;\n    margin-right: 14px;\n}\n\n#download-size {\n    width: 100%;\n    height: auto;\n    @include display(flex);\n}\n\ndiv#name-intro {\n    @include display(flex);\n    @include flex-direction(row);\n}\n\ndiv#download-intro {\n    @include display(flex);\n    @include flex-direction(column);\n    @include justify-content(center);\n    @include align-items(center);\n    text-align: center;\n    font-size: 20px;\n    \n    >a {\n        text-align: center;\n        max-width: 30px;\n        margin-top: 40px;\n    }\n    \n       >p >a {\n        color: $basecolor;\n        border-bottom: 3px solid #FFDB00;\n        padding-bottom: 3px;\n    }\n}"],"names":[],"mappings":"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"}